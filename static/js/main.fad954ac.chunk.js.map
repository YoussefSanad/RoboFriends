{"version":3,"sources":["Components/Card/Card.js","Components/CardList/CardList.js","Components/SearchBox/SearchBox.js","Components/Scroll/Scroll.js","Components/ErrorBoundary/ErrorBoundary.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","onChange","type","placeholder","Scroll","props","style","overflowY","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","search","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,cACpB,gCACI,6BAAKC,IACL,4BAAIC,WCULI,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,mCACKA,EAAOC,KAAI,SAACC,EAAMC,GACf,OAAQ,cAAC,EAAD,CAEJV,GAAIS,EAAKT,GACTC,KAAMQ,EAAKR,KACXC,MAAOO,EAAKP,OAHPQ,SCEVC,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOU,SAAUD,EAAcT,UAAU,mCAAmCW,KAAK,SAASC,YAAY,qBCKnGC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACKH,EAAMI,YCeJC,E,kDAhBX,WAAYL,GAAQ,IAAD,8BACf,gBACKM,MAAQ,CACTC,SAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAOG,KAAKJ,MAAMC,SAAW,0DAAoCG,KAAKV,MAAMI,a,GAdxDQ,IAAMC,WC8CnBC,E,kDAxCX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAACM,OAAQD,EAAME,OAAOC,SAPpC,EAAKb,MAAQ,CACT,OAAU,GACV,OAAU,IAJJ,E,qDAYd,WAAqB,IAAD,OAChBc,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACrB,OAAQkC,S,oBAG9C,WAAU,IAAD,OACElC,EAAUoB,KAAKJ,MAAfhB,OACDmC,EAAiBf,KAAKJ,MAAMhB,OAAOoC,QAAO,SAAAC,GAC5C,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS,EAAKvB,MAAMW,OAAOW,kBAG/D,OAAQtC,EAAOwC,OAEP,sBAAK5C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWS,aAAce,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAPd,gD,GA1BdZ,aCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.fad954ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robot' src={`https://robohash.org/${id}?200*200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from \"../Card/Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <>\r\n            {robots.map((user, i) => {\r\n                return (<Card\r\n                    key={i}\r\n                    id={user.id}\r\n                    name={user.name}\r\n                    email={user.email}\r\n                />);\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input onChange={searchChange} className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            hasError: 0\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        return this.state.hasError ? <h1>Ooops. That is not good.</h1> : this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react'\r\nimport CardList from './Components/CardList/CardList';\r\nimport SearchBox from './Components/SearchBox/SearchBox';\r\nimport Scroll from \"./Components/Scroll/Scroll\";\r\nimport ErrorBoundary from \"./Components/ErrorBoundary/ErrorBoundary\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            'robots': [],\r\n            'search': ''\r\n        };\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({search: event.target.value});\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    render() {\r\n        const {robots} = this.state;\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.search.toLowerCase());\r\n        });\r\n\r\n        return !robots.length ? <h2>Loading...</h2> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}